package com.hu.operation.duty.controller;import com.hu.operation.duty.service.HolidayService;import com.hu.sysManagement.common.utils.Result;import com.hu.sysManagement.common.utils.ShiroUtils;import com.hu.sysManagement.system.domain.User;import com.hu.sysManagement.system.service.UserService;import java.io.UnsupportedEncodingException;import java.net.URLDecoder;import java.util.HashMap;import java.util.List;import javax.annotation.Resource;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.ResponseBody;@Controllerpublic class HolidayController {    private final Logger logger = LoggerFactory.getLogger(getClass());    String prefix = "operation/duty/holiday";    @Resource    UserService userService;    @Resource    HolidayService holidayService;    @GetMapping({"/duty/holidayDuty"})    String welcome(Model model) throws UnsupportedEncodingException {        String name = holidayService.getDutyEmp();        System.out.println(name);        model.addAttribute("name", name);        HashMap<String, Object> map = new HashMap<>();        List<User> userList = userService.userList(map);        System.out.println(((User) userList.get(0)).getName());        model.addAttribute("list", userList);        model.addAttribute("isManager", Boolean.valueOf(ShiroUtils.isPermitted("duty:holidayduty:manage")));        return prefix + "/HolidayDuty";    }    @PostMapping({"/duty/holiday/saveDutyEmp"})    @ResponseBody    public Result saveDutyEmp(@RequestBody String mydata) throws UnsupportedEncodingException {        String maxstr = URLDecoder.decode(mydata, "utf-8");        System.out.println(maxstr);        holidayService.saveDutyEmp(maxstr);        return Result.ok();    }}