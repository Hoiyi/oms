package com.hu.sysManagement.common.utils;import java.lang.reflect.Method;import java.util.HashMap;import java.util.Map;import org.springframework.stereotype.Component;@Componentpublic class BeanFilter<T> {    public T clearSpace(T target) {        if (target != null) {            Class clazz = target.getClass();            Method[] methods = clazz.getDeclaredMethods();            for (Method method : methods) {                String setMethodName = method.getName();                if (setMethodName.startsWith("get")) {                    try {                        if (method.getReturnType() == String.class) {                            Object fieldValue = method.invoke(target, new Object[0]);                            Method setMethod = clazz.getMethod(setMethodName.replace("get", "set"), new Class[]{String.class});                            if (fieldValue != null)                                setMethod.invoke(target, new Object[]{fieldValue.toString().trim()});                        }                    } catch (Exception e) {                        e.printStackTrace();                    }                }            }        }        return target;    }    public static Map<String, Object> clearSpace(Map<String, Object> map) {        HashMap result = null;        if (map != null) {            result = new HashMap(map.size());            for (String key : map.keySet()) {                if ((map.get(key) instanceof String)) {                    result.put(key, map.get(key).toString().trim());                }            }        }        return result;    }}